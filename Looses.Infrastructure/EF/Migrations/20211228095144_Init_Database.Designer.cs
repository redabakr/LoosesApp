// <auto-generated />
using System;
using Looses.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Looses.Infrastructure.EF.Migrations
{
    [DbContext(typeof(LoosesDbContext))]
    [Migration("20211228095144_Init_Database")]
    partial class Init_Database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Looses.Domain.Entities.Looses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DaysOffline")
                        .HasColumnType("int");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LossDate")
                        .HasColumnType("date");

                    b.Property<string>("WellName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("WellName");

                    b.ToTable("Looses", (string)null);
                });

            modelBuilder.Entity("Looses.Domain.Entities.Well", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Wells", (string)null);

                    b.HasData(
                        new
                        {
                            Name = "R-001",
                            Id = 1
                        },
                        new
                        {
                            Name = "R-002",
                            Id = 2
                        },
                        new
                        {
                            Name = "R-003",
                            Id = 3
                        },
                        new
                        {
                            Name = "R-004",
                            Id = 4
                        },
                        new
                        {
                            Name = "R-005",
                            Id = 5
                        });
                });

            modelBuilder.Entity("Looses.Domain.Entities.Looses", b =>
                {
                    b.HasOne("Looses.Domain.Entities.Well", "Well")
                        .WithMany("Looses")
                        .HasForeignKey("WellName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Well");
                });

            modelBuilder.Entity("Looses.Domain.Entities.Well", b =>
                {
                    b.Navigation("Looses");
                });
#pragma warning restore 612, 618
        }
    }
}
