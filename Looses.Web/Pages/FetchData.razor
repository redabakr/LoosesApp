@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (dataList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <SfGrid DataSource="@dataList">
        <GridColumns>
            <GridColumn Field=@nameof(LossReadModel.Id) HeaderText="Id" />
            <GridColumn Field=@nameof(LossReadModel.WellName) HeaderText="WellName" />
            <GridColumn Field=@nameof(LossReadModel.EventName) HeaderText="EventName" />
            <GridColumn Field=@nameof(LossReadModel.LoosDate) HeaderText="LoosDate" />
            <GridColumn Field=@nameof(LossReadModel.DaysOffline) HeaderText="DaysOffline" />
        </GridColumns>
     </SfGrid> 
    
    @* *@
    @* *@
    @* <table class="table"> *@
    @*     <thead> *@
    @*         <tr> *@
    @*             <th>Date</th> *@
    @*             <th>Temp. (C)</th> *@
    @*             <th>Temp. (F)</th> *@
    @*             <th>Summary</th> *@
    @*         </tr> *@
    @*     </thead> *@
    @*     <tbody> *@
    @*         @foreach (var forecast in forecasts) *@
    @*         { *@
    @*             <tr> *@
    @*                 <td>@forecast.Date.ToShortDateString()</td> *@
    @*                 <td>@forecast.TemperatureC</td> *@
    @*                 <td>@forecast.TemperatureF</td> *@
    @*                 <td>@forecast.Summary</td> *@
    @*             </tr> *@
    @*         } *@
    @*     </tbody> *@
    @* </table> *@
}

@code {
    private LossReadModel[]? dataList;

    protected override async Task OnInitializedAsync()
    {
        dataList = await Http.GetFromJsonAsync<LossReadModel[]>("looses"); //"sample-data/data.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
